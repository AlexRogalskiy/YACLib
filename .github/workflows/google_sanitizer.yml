name: Test with Google sanitizer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  main:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.sanitizer }} on ${{ matrix.build_type }} ${{ matrix.config.cxx }} ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        sanitizer: [ UBSAN, ASAN, TSAN ]
        # TODO(MBkkt): Add MEMSAN then GTest fix that issue https://github.com/google/sanitizers/issues/648
        build_type: [ RelWithDebInfo, Debug ]
        cxx_standard: [ 20 ]
        os: [ ubuntu-20.04 ]
        config:
          - {
            cc: clang-12, cxx: clang++-12,
            deps: 'clang-12',
          }
          - {
            cc: gcc-11, cxx: g++-11,
            deps: 'gcc-11 g++-11',
          }

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run:
          sudo apt install ${{ matrix.config.deps }}

      - name: Configure CMake
        run:
          mkdir build &&
          cd build &&
          cmake ..
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DCMAKE_C_COMPILER=${{ matrix.config.cc }}
          -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }}
          -DYACLIB_BUILD_TESTING=ON
          -DYACLIB_BUILD_EXAMPLES=ON
          -DYACLIB_SANITIZER=${{ matrix.sanitizer }}
          -DYACLIB_CXX_STANDARD=${{ matrix.cxx_standard }}

      - name: Build
        run:
          cmake --build build --config ${{ matrix.build_type }}

      - name: Test
        run:
          cd build &&
          ASAN_OPTIONS=help=0:verbosity=0:halt_on_error=0:check_initialization_order=1:detect_stack_use_after_return=1:strict_init_order=1:strict_string_checks=1:debug=1
          TSAN_OPTIONS=help=0:verbosity=0
          ctest --output-on-failure -C ${{ matrix.build_type }} -V
