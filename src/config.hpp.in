#pragma once

#include <cstddef>

#if defined(__has_feature)
#  if __has_feature(address_sanitizer) || ${YACLIB_ASAN}
#    define YACLIB_ASAN
#  endif
#  if __has_feature(thread_sanitizer) || ${YACLIB_TSAN}
#    define YACLIB_TSAN
#  endif
#  if __has_feature(memory_sanitizer) || ${YACLIB_MEMSAN}
#    define YACLIB_MEMSAN
#  endif
#  if __has_feature(undefined_behavior_sanitizer) || ${YACLIB_UBSAN}
#    define YACLIB_UBSAN
#  endif
#else
#  if defined(__SANITIZE_ADDRESS__) || ${YACLIB_ASAN}
#    define YACLIB_ASAN
#  endif
#  if defined(__SANITIZE_THREAD__) || ${YACLIB_TSAN}
#    define YACLIB_TSAN
#  endif
#  if defined(__SANITIZE_UNDEFINED__) || ${YACLIB_UBSAN}
#    define YACLIB_UBSAN
#  endif
#endif

// Maybe we should increase some of this
#ifndef YACLIB_SLOWDOWN
#  if defined(YACLIB_ASAN)
#    define YACLIB_SLOWDOWN 2
#  elif defined(YACLIB_TSAN)
#    define YACLIB_SLOWDOWN 2
#  elif defined(YACLIB_MEMSAN)
#    define YACLIB_SLOWDOWN 1
#  else
#    define YACLIB_SLOWDOWN 1
#  endif
#endif

#ifndef YACLIB_MEMORY_OVERHEAD
#  if defined(YACLIB_ASAN)
#    define YACLIB_MEMORY_OVERHEAD 3
#  elif defined(YACLIB_TSAN)
#    define YACLIB_MEMORY_OVERHEAD 3
#  elif defined(YACLIB_MEMSAN)
#    define YACLIB_MEMORY_OVERHEAD 1
#  else
#    define YACLIB_MEMORY_OVERHEAD 1
#  endif
#endif

#ifndef YACLIB_CI_SLOWDOWN
#  define YACLIB_CI_SLOWDOWN 1
#endif

#if ${YACLIB_ATOMIC_EVENT}
#  define YACLIB_ATOMIC_EVENT
#endif

namespace yaclib {

inline constexpr std::size_t kCacheLineSize = 64;  // TODO(MBkkt) Make better

}  // namespace yaclib
